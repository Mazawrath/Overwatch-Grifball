settings
{
	modes
	{
		Team Deathmatch
		{
			enabled maps
			{
				Workshop Chamber
				Workshop Island
			}
		}

		General
		{
			Hero Limit: Off
			Respawn Time Scalar: 25%
		}
	}

	heroes
	{
		General
		{
			Damage Dealt: 500%
			Health: 10%

			Genji
			{
				Damage Dealt: 500%
				Deflect: Off
				No Ammunition Requirement: On
				Primary Fire: Off
				Secondary Fire: Off
				Swift Strike: Off
				Ultimate Ability Dragonblade: Off
			}

			Torbjörn
			{
				Deploy Turret: Off
				No Ammunition Requirement: On
				Overload: Off
				Quick Melee: Off
				Ultimate Ability Molten Core: Off
				Weapons Enabled: Forge Hammer Only
			}

			enabled heroes
			{
				Genji
				Torbjörn
			}
		}
	}
}

variables
{
	global:
		0: ViewAngle
		1: DistanceToTarget

	player:
		1: PlayerTargeted
		2: PlayerInRange
		3: LungeEnabled
}

rule("Set global variables")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(ViewAngle, 15);
		Set Global Variable(DistanceToTarget, 4);
	}
}

rule("Set player variables")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Set Player Variable(Event Player, LungeEnabled, True);
	}
}

disabled rule("Create ball")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Effect(All Players(All Teams), Orb, White, Vector(0, 0, 0), 1, Visible To Position and Radius);
	}
}

rule("Torb can only swing hammer once")
{
	event
	{
		Ongoing - Each Player;
		All;
		Torbjörn;
	}

	conditions
	{
		Is Firing Primary(Event Player) == True;
		Player Variable(Event Player, LungeEnabled) == True;
	}

	actions
	{
		Set Player Variable(Event Player, LungeEnabled, False);
		Set Primary Fire Enabled(Event Player, False);
		Wait(0.250, Ignore Condition);
		Set Primary Fire Enabled(Event Player, True);
		Set Player Variable(Event Player, LungeEnabled, True);
	}
}

rule("Genji can only swing sword once")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is Button Held(Event Player, Primary Fire) == True;
		Player Variable(Event Player, LungeEnabled) == True;
	}

	actions
	{
		Set Player Variable(Event Player, LungeEnabled, False);
		Set Ultimate Ability Enabled(Event Player, False);
		disabled Wait(1, Ignore Condition);
		disabled Set Primary Fire Enabled(Event Player, True);
		Set Player Variable(Event Player, LungeEnabled, True);
	}
}

rule("Create target particle")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create Effect(Event Player, Bad Aura, Red, Player Variable(Event Player, PlayerTargeted), 1, Position and Radius);
	}
}

rule("Genji Lunge towards targeted player")
{
	event
	{
		Ongoing - Each Player;
		All;
		Genji;
	}

	conditions
	{
		Is Button Held(Event Player, Melee) == True;
		Player Variable(Event Player, PlayerInRange) == True;
		Player Variable(Event Player, LungeEnabled) == True;
	}

	actions
	{
		Apply Impulse(Event Player, Up, 4, To World, Cancel Contrary Motion);
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), Player Variable(Event Player, PlayerTargeted)), 9,
			To World, Cancel Contrary Motion);
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Player Variable(Event Player, PlayerTargeted)), 70,
			To World, None);
		Wait(0.250, Ignore Condition);
		Stop Facing(Event Player);
	}
}

rule("Rein Lunge towards targeted player")
{
	event
	{
		Ongoing - Each Player;
		All;
		Torbjörn;
	}

	conditions
	{
		Is Button Held(Event Player, Primary Fire) == True;
		Player Variable(Event Player, PlayerInRange) == True;
		Player Variable(Event Player, LungeEnabled) == True;
	}

	actions
	{
		Apply Impulse(Event Player, Up, 4, To World, Cancel Contrary Motion);
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), Player Variable(Event Player, PlayerTargeted)), 9,
			To World, Cancel Contrary Motion);
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Player Variable(Event Player, PlayerTargeted)), 70,
			To World, None);
		Wait(0.250, Ignore Condition);
		Stop Facing(Event Player);
	}
}

rule("Get player to target")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		"At least 1 player is within the players reticle"
		If(Compare(Count Of(Filtered Array(Filtered Array(Players in View Angle(Event Player, Opposite Team Of(Team Of(Event Player)),
			Global Variable(ViewAngle)), Compare(Distance Between(Event Player, Current Array Element), <=, Global Variable(
			DistanceToTarget))), Is Alive(Current Array Element))), >=, 1));
			Set Player Variable(Event Player, PlayerTargeted, Eye Position(First Of(Sorted Array(Filtered Array(Filtered Array(
				All Living Players(Opposite Team Of(Team Of(Event Player))), Compare(Distance Between(Event Player, Current Array Element), <=,
				Global Variable(DistanceToTarget))), Is In View Angle(Event Player, Position Of(Current Array Element), Global Variable(
				ViewAngle))), Angle Between Vectors(Facing Direction Of(Event Player), Direction Towards(Eye Position(Event Player),
				Eye Position(Current Array Element)))))));
			Set Player Variable(Event Player, PlayerInRange, True);
		Else;
			Set Player Variable(Event Player, PlayerTargeted, Vector(0, -20.000, 0));
			Set Player Variable(Event Player, PlayerInRange, False);
		End;
		Wait(0.250, Ignore Condition);
		Loop;
	}
}

rule("// DEV TOOLS")
{
	event
	{
		Ongoing - Global;
	}
}

rule("Spawn Dummies")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Dummy Bot(Hero(Torbjörn), Team 2, -1.000, Vector(0, 0, 0), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Genji), Team 2, -1.000, Vector(0, 0, 0), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Torbjörn), Team 2, -1.000, Vector(0, 0, 0), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Genji), Team 2, -1.000, Vector(0, 0, 0), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Torbjörn), Team 2, -1.000, Vector(0, 0, 0), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Genji), Team 2, -1.000, Vector(0, 0, 0), Vector(0, 0, 0));
	}
}